This is pdfTeX, Version 3.1415926-2.5-1.40.14 (TeX Live 2013/Debian) (format=pdflatex 2015.1.8)  18 FEB 2015 13:59
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**ExempleUsPlantillaA4.tex -recorder
(./ExempleUsPlantillaA4.tex
LaTeX2e <2011/06/27>
Babel <3.9h> and hyphenation patterns for 78 languages loaded.
(./tesi_upf.cls

LaTeX Warning: You have requested document class `tesi_upf',
               but the document class provides `book'.

Document Class: book 2005/09/16 v1.4f Standard LaTeX document class
(/usr/share/texlive/texmf-dist/tex/latex/base/bk12.clo
File: bk12.clo 2007/10/19 v1.4h Standard LaTeX file (size option)
)
\c@part=\count79
\c@chapter=\count80
\c@section=\count81
\c@subsection=\count82
\c@subsubsection=\count83
\c@paragraph=\count84
\c@subparagraph=\count85
\c@figure=\count86
\c@table=\count87
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
)
(/usr/share/texlive/texmf-dist/tex/latex/base/inputenc.sty
Package: inputenc 2008/03/30 v1.1d Input encoding file
\inpenc@prehook=\toks14
\inpenc@posthook=\toks15

(/usr/share/texlive/texmf-dist/tex/latex/base/latin1.def
File: latin1.def 2008/03/30 v1.1d Input encoding file
))
(/usr/share/texlive/texmf-dist/tex/generic/babel/babel.sty
Package: babel 2013/12/03 3.9h The Babel package

(/usr/share/texlive/texmf-dist/tex/generic/babel-catalan/catalan.ldf
Language: catalan 2005/03/29 v2.2p Catalan support from the babel system

(/usr/share/texlive/texmf-dist/tex/generic/babel/babel.def
File: babel.def 2013/12/03 3.9h Babel common definitions
\babel@savecnt=\count88
\U@D=\dimen103
)
Package babel Info: Making " an active character on input line 91.
Warning: You are using encoding OT1 instead of T1.
Some word breaks will not be found.
\leftllkern=\dimen104
\rightllkern=\dimen105
\raiselldim=\dimen106
)
(/usr/share/texlive/texmf-dist/tex/generic/babel-english/english.ldf
Language: english 2012/08/20 v3.3p English support from the babel system
\l@canadian = a dialect from \language\l@american 
\l@australian = a dialect from \language\l@british 
\l@newzealand = a dialect from \language\l@british 
))
(./crop.sty
Package: crop 2003/05/20 v1.9 crop marks (mf)
\stockwidth=\dimen107
\stockheight=\dimen108
\CROP@index=\count89
 (/usr/share/texlive/texmf-dist/tex/latex/graphics/color.sty
Package: color 2005/11/14 v1.0j Standard LaTeX Color (DPC)

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/color.cfg
File: color.cfg 2007/01/18 v1.5 color configuration of teTeX/TeXLive
)
Package color Info: Driver file: pdftex.def on input line 130.

(/usr/share/texlive/texmf-dist/tex/latex/pdftex-def/pdftex.def
File: pdftex.def 2011/05/27 v0.06d Graphics/color for pdfTeX

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/infwarerr.sty
Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
)
(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ltxcmds.sty
Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
)
\Gread@gobject=\count90
))
(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2009/02/05 v1.0o Standard LaTeX Graphics (DPC,SPQR)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 1999/03/16 v1.09 sin cos tan (DPC)
)
(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/graphics.cfg
File: graphics.cfg 2010/04/23 v1.9 graphics configuration of TeX Live
)
Package graphics Info: Driver file: pdftex.def on input line 91.
)
\CROP@offset=\count91
Package crop Info: Local config file crop.cfg used on input line 605.

(/usr/share/texlive/texmf-dist/tex/xelatex/xetexconfig/crop.cfg))
(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 1999/02/16 v1.0f Enhanced LaTeX Graphics (DPC,SPQR)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 1999/03/16 v1.13 key=value parser (DPC)
\KV@toks@=\toks16
)
\Gin@req@height=\dimen109
\Gin@req@width=\dimen110
)
(/usr/share/texlive/texmf-dist/tex/latex/psnfss/times.sty
Package: times 2005/04/12 PSNFSS-v9.2a (SPQR) 
)
(/usr/share/texlive/texmf-dist/tex/latex/base/makeidx.sty
Package: makeidx 2000/03/29 v1.0m Standard LaTeX package
)
\@indexfile=\write3
\openout3 = `ExempleUsPlantillaA4.idx'.


Writing index file ExempleUsPlantillaA4.idx
(./ExempleUsPlantillaA4.aux)
\openout1 = `ExempleUsPlantillaA4.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 49.
LaTeX Font Info:    ... okay on input line 49.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 49.
LaTeX Font Info:    ... okay on input line 49.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 49.
LaTeX Font Info:    ... okay on input line 49.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 49.
LaTeX Font Info:    ... okay on input line 49.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 49.
LaTeX Font Info:    ... okay on input line 49.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 49.
LaTeX Font Info:    ... okay on input line 49.
LaTeX Font Info:    Try loading font information for OT1+ptm on input line 49.

(/usr/share/texlive/texmf-dist/tex/latex/psnfss/ot1ptm.fd
File: ot1ptm.fd 2001/06/04 font definitions for OT1/ptm.
)
LaTeX Info: Redefining \l on input line 49.
LaTeX Info: Redefining \L on input line 49.

(/usr/share/texlive/texmf-dist/tex/context/base/supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count92
\scratchdimen=\dimen111
\scratchbox=\box26
\nofMPsegments=\count93
\nofMParguments=\count94
\everyMPshowfont=\toks17
\MPscratchCnt=\count95
\MPscratchDim=\dimen112
\MPnumerator=\count96
\makeMPintoPDFobject=\count97
\everyMPtoPDFconversion=\toks18
) (/usr/share/texlive/texmf-dist/tex/generic/oberdiek/pdftexcmds.sty
Package: pdftexcmds 2011/11/29 v0.20 Utility functions of pdfTeX for LuaTeX (HO
)

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ifluatex.sty
Package: ifluatex 2010/03/01 v1.3 Provides the ifluatex switch (HO)
Package ifluatex Info: LuaTeX not detected.
)
(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ifpdf.sty
Package: ifpdf 2011/01/30 v2.3 Provides the ifpdf switch (HO)
Package ifpdf Info: pdfTeX in PDF mode is detected.
)
Package pdftexcmds Info: LuaTeX not detected.
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode found.
)
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty
Package: epstopdf-base 2010/02/09 v2.5 Base part for package epstopdf

(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/grfext.sty
Package: grfext 2010/08/19 v1.1 Manage graphics extensions (HO)

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/kvdefinekeys.sty
Package: kvdefinekeys 2011/04/07 v1.3 Define keys (HO)
))
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/kvoptions.sty
Package: kvoptions 2011/06/30 v3.11 Key value format for package options (HO)

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/kvsetkeys.sty
Package: kvsetkeys 2012/04/25 v1.16 Key value parser (HO)

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/etexcmds.sty
Package: etexcmds 2011/02/16 v1.5 Avoid name clashes with e-TeX commands (HO)
Package etexcmds Info: Could not find \expanded.
(etexcmds)             That can mean that you are not using pdfTeX 1.50 or
(etexcmds)             that some package has redefined \expanded.
(etexcmds)             In the latter case, load this package earlier.
)))
Package grfext Info: Graphics extension search list:
(grfext)             [.png,.pdf,.jpg,.mps,.jpeg,.jbig2,.jb2,.PNG,.PDF,.JPG,.JPE
G,.JBIG2,.JB2,.eps]
(grfext)             \AppendGraphicsExtensions on input line 452.

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
File: epstopdf-sys.cfg 2010/07/13 v1.3 Configuration of (r)epstopdf for TeX Liv
e
))
Package crop Info: requested driver: `' on input line 49.
Package crop Info: detected driver: `pdftex' on input line 49.
Package crop Info: using `pdftex' graphics driver on input line 49.
LaTeX Font Info:    Try loading font information for OT1+phv on input line 54.

(/usr/share/texlive/texmf-dist/tex/latex/psnfss/ot1phv.fd
File: ot1phv.fd 2001/06/04 scalable font definitions for OT1/phv.
)
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <14.4> on input line 54.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <7> on input line 54.

<logo_upf.png, id=1, 36.135pt x 13.2495pt>
File: logo_upf.png Graphic file (type png)
 <use logo_upf.png>
Package pdftex.def Info: logo_upf.png used on input line 54.
(pdftex.def)             Requested size: 14.45372pt x 5.2997pt.
 [1{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map}





 <./logo_upf.png>] [2


]
! Missing $ inserted.
<inserted text> 
                $
l.61 \noindent Escriviu aquí la vostra dedicatò
                                                 ria
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <12> on input line 61.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <8> on input line 61.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <6> on input line 61.
! Extra }, or forgotten $.
\mathtwosuperior ->{^2}
                       
l.61 \noindent Escriviu aquí la vostra dedicatò
                                                 ria
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.62 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

[3] [4


] [5] [6


]
LaTeX Font Info:    Font shape `OT1/ptm/bx/n' in size <17.28> not available
(Font)              Font shape `OT1/ptm/b/n' tried instead on input line 77.
LaTeX Font Info:    Font shape `OT1/phv/bx/n' in size <17.28> not available
(Font)              Font shape `OT1/phv/b/n' tried instead on input line 77.
 [7] [8


]
LaTeX Font Info:    Font shape `OT1/ptm/bx/n' in size <12> not available
(Font)              Font shape `OT1/ptm/b/n' tried instead on input line 92.
 [9] [10


]
LaTeX Font Info:    Font shape `OT1/ptm/bx/n' in size <24.88> not available
(Font)              Font shape `OT1/ptm/b/n' tried instead on input line 99.
 (./ExempleUsPlantillaA4.toc
Runaway argument?
{\~A\GenericError {(inputenc) }{Package inputenc Error: Keyboard char\ETC.
! Paragraph ended before \l@chapter was complete.
<to be read again> 
                   \par 
l.5 ...nition with \def \relax \vadjust {\def \par
                                                   {\let \par \@@par \par }\...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Illegal unit of measure (pt inserted).
<to be read again> 
                   \vskip 
l.5 ...rule height\z@ \penalty \@M \vskip 1 \vskip
                                                   \z@skip }\relax ${}\def \...
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Extra }, or forgotten \endgroup.
l.5 ...t\z@ \penalty \@M \vskip 1 \vskip \z@skip }
                                                  \relax ${}\def \relax \vad...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Use of \relax doesn't match its definition.
l.5 ...skip o \vskip \z@skip }\relax \@inpenc@test
                                                   \bgroup \uccode `\~\Messa...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing number, treated as zero.
<to be read again> 
                   \MessageBreak 
l.5 ...npenc@test \bgroup \uccode `\~\MessageBreak
                                                   \uppercase {\egroup \def ...
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Missing number, treated as zero.
<to be read again> 
                   b
l.5 ...eC {o}}r \@inpenc@test \bgroup \uccode `\~b
                                                  \uppercase {\egroup \def ~...
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Missing { inserted.
l.5 ...case {\egroup \def ~}efore using this key.}
                                                  ndex de figures}{xiii}
Where was the left brace? You said something like `\def\a}',
which I'm going to interpret as `\def\a{}'.

! Extra }, or forgotten $.
l.5 ...ef ~}efore using this key.}ndex de figures}
                                                  {xiii}
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

Runaway argument?
{\~A\GenericError {(inputenc) }{Package inputenc Error: Keyboard char\ETC.
! Paragraph ended before \l@chapter was complete.
<to be read again> 
                   \par 
l.6 ...nition with \def \relax \vadjust {\def \par
                                                   {\let \par \@@par \par }\...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.6 ...nition with \def \relax \vadjust {\def \par
                                                   {\let \par \@@par \par }\...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Illegal unit of measure (pt inserted).
<to be read again> 
                   \vskip 
l.6 ...rule height\z@ \penalty \@M \vskip 1 \vskip
                                                   \z@skip }\relax ${}\def \...
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Extra }, or forgotten \endgroup.
l.6 ...t\z@ \penalty \@M \vskip 1 \vskip \z@skip }
                                                  \relax ${}\def \relax \vad...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Use of \relax doesn't match its definition.
l.6 ...skip o \vskip \z@skip }\relax \@inpenc@test
                                                   \bgroup \uccode `\~\Messa...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing number, treated as zero.
<to be read again> 
                   \MessageBreak 
l.6 ...npenc@test \bgroup \uccode `\~\MessageBreak
                                                   \uppercase {\egroup \def ...
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Missing number, treated as zero.
<to be read again> 
                   b
l.6 ...eC {o}}r \@inpenc@test \bgroup \uccode `\~b
                                                  \uppercase {\egroup \def ~...
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Missing { inserted.
l.6 ...case {\egroup \def ~}efore using this key.}
                                                  ndex de taules}{xv}
Where was the left brace? You said something like `\def\a}',
which I'm going to interpret as `\def\a{}'.

! Extra }, or forgotten $.
l.6 ...def ~}efore using this key.}ndex de taules}
                                                  {xv}
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Use of \relax doesn't match its definition.
\select@language ...def \bbl@hymapsel 4\relax \fi 
                                                  \edef \languagename {#1}\b...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \relax doesn't match its definition.
\bbl@withactive ...lccode `~=`#2\relax \lowercase 
                                                  {\endgroup #1~}
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing } inserted.
<inserted text> 
                }
l.7 \select@language {english}
                              
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Use of \relax doesn't match its definition.
\originalTeX ...save \let \"=\babel@0 \relax \let 
                                                  \-=\babel@1 \relax \lefthy...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \relax doesn't match its definition.
\originalTeX ...\-=\babel@1 \relax \lefthyphenmin 
                                                  =2\relax \righthyphenmin =...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \relax doesn't match its definition.
\originalTeX ...yphenmin =2\relax \righthyphenmin 
                                                  =3\relax 
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \relax doesn't match its definition.
\bbl@switch #1->\originalTeX \expandafter 
                                          \def \expandafter \originalTeX \ex...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \relax doesn't match its definition.
\bbl@switch ...s#1\endcsname \relax \bbl@usehooks 
                                                  {afterextras}{}\ifcase \bb...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \expandafter doesn't match its definition.
\bbl@patterns #1->\language =\expandafter \ifx 
                                               \csname l@#1:\f@encoding \end...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing number, treated as zero.
<to be read again> 
                   \l@english:OT1 
l.7 \select@language {english}
                              
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Use of \relax doesn't match its definition.
\bbl@patterns ...coding \endcsname \relax \csname 
                                                  l@#1\endcsname \edef \bbl@...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Extra \endcsname.
\bbl@patterns ...me \relax \csname l@#1\endcsname 
                                                  \edef \bbl@tempa {#1}\else...
l.7 \select@language {english}
                              
I'm ignoring this, since I wasn't doing a \csname.

! Extra \else.
\bbl@patterns ...sname \edef \bbl@tempa {#1}\else 
                                                  \csname l@#1:\f@encoding \...
l.7 \select@language {english}
                              
I'm ignoring this; it doesn't match any \if.

! Use of \relax doesn't match its definition.
\bbl@patterns ...ding }\fi \relax \@expandtwoargs 
                                                  \bbl@usehooks {patterns}{{...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \expandafter doesn't match its definition.
\@ifundefined #1->\expandafter \ifx 
                                    \csname #1\endcsname \relax \expandafter...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \relax doesn't match its definition.
\@ifundefined ...#1\endcsname \relax \expandafter 
                                                  \@firstoftwo \else \expand...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \expandafter doesn't match its definition.
\in@ ...up \def \in@@ ##1#1{}\toks@ \expandafter {
                                                  \in@@ #2{}{}#1}\edef \in@@...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing { inserted.
<to be read again> 
                   }
l.7 \select@language {english}
                              
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Use of \expandafter doesn't match its definition.
\in@ ...in@@ {\the \toks@ }\expandafter \endgroup 
                                                  \ifx \in@@ \@empty \in@fal...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Improper \hyphenation will be flushed.
\bbl@patterns ...}\hyphenation {\bbl@hyphenation@ 
                                                  \@ifundefined {bbl@hyphena...
l.7 \select@language {english}
                              
Hyphenation exceptions must contain only letters
and hyphens. But continue; I'll forgive and forget.

! Use of \expandafter doesn't match its definition.
\@ifundefined #1->\expandafter \ifx 
                                    \csname #1\endcsname \relax \expandafter...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Improper \hyphenation will be flushed.
<recently read> \bbl@hyphenation@english 
                                         
l.7 \select@language {english}
                              
Hyphenation exceptions must contain only letters
and hyphens. But continue; I'll forgive and forget.

! Use of \relax doesn't match its definition.
\@ifundefined ...#1\endcsname \relax \expandafter 
                                                  \@firstoftwo \else \expand...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Extra \else.
<argument> \else 
                 
l.7 \select@language {english}
                              
I'm ignoring this; it doesn't match any \if.

! Improper \hyphenation will be flushed.
\bbl@patterns ...ned {bbl@hyphenation@#1}\@empty {
                                                  \space \csname bbl@hyphena...
l.7 \select@language {english}
                              
Hyphenation exceptions must contain only letters
and hyphens. But continue; I'll forgive and forget.

! Improper \hyphenation will be flushed.
<recently read> \bbl@hyphenation@english 
                                         
l.7 \select@language {english}
                              
Hyphenation exceptions must contain only letters
and hyphens. But continue; I'll forgive and forget.

! Extra }, or forgotten \endgroup.
\bbl@patterns ...e bbl@hyphenation@#1\endcsname }}
                                                  \xdef \bbl@hyphlist {\bbl@...
l.7 \select@language {english}
                              
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten \endgroup.
\bbl@patterns ...umber \language ,}\fi \endgroup }
                                                  
l.7 \select@language {english}
                              
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Use of \expandafter doesn't match its definition.
\babel@savevariable ...group \toks@ \expandafter {
                                                  \originalTeX #1=}\edef \x ...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing { inserted.
<to be read again> 
                   \lefthyphenmin 
l.7 \select@language {english}
                              
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Use of \relax doesn't match its definition.
\babel@savevariable ...\the \toks@ \the #1\relax }
                                                  }\x 
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Undefined control sequence.
\babel@savevariable ... \toks@ \the #1\relax }}\x 
                                                  
l.7 \select@language {english}
                              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Use of \expandafter doesn't match its definition.
\babel@savevariable ...group \toks@ \expandafter {
                                                  \originalTeX #1=}\edef \x ...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \relax doesn't match its definition.
\babel@savevariable ...\the \toks@ \the #1\relax }
                                                  }\x 
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \expandafter doesn't match its definition.
\bbl@switch ... \righthyphenmin \expandafter \ifx 
                                                  \csname #1hyphenmins\endcs...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \relax doesn't match its definition.
\bbl@switch ...s\endcsname \relax \set@hyphenmins 
                                                  \tw@ \thr@@ \relax \else \...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \relax doesn't match its definition.
\bbl@switch ...yphenmins \tw@ \thr@@ \relax \else 
                                                  \expandafter \expandafter ...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \expandafter doesn't match its definition.
\bbl@switch ...ax \else \expandafter \expandafter 
                                                  \expandafter \set@hyphenmi...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \expandafter doesn't match its definition.
\bbl@switch ...after \expandafter \set@hyphenmins 
                                                  \csname #1hyphenmins\endcs...
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \relax doesn't match its definition.
\bbl@switch ... #1hyphenmins\endcsname \relax \fi 
                                                  
l.7 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Extra \fi.
<argument> ...ch \expandafter {\languagename }\fi 
                                                  
l.7 \select@language {english}
                              
I'm ignoring this; it doesn't match any \if.

! Use of \relax doesn't match its definition.
\select@language ...def \bbl@hymapsel 4\relax \fi 
                                                  \edef \languagename {#1}\b...
l.8 \select@language {english}
                              
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Undefined control sequence.
\bbl@fixname #1->\begingroup \def \bbl@tempe 
                                             {l@}\edef \bbl@tempd {\noexpand...
l.8 \select@language {english}
                              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

)
Runaway argument?
{\noexpand \@ifundefined {\noexpand \bbl@tempe \languagename }}\bbl@tempd \ETC.
! File ended while scanning use of \bbl@tempd.
<inserted text> 
                \par 
l.99 \tableofcontents
                     
I suspect you have forgotten a `}', causing me
to read past where you wanted me to stop.
I'll try to recover; but if the error is serious,
you'd better type `E' or `X' now and fix your file.

! Use of \expandafter doesn't match its definition.
\@starttoc ...1}\if@filesw \expandafter \newwrite 
                                                  \csname tf@#1\endcsname \i...
l.99 \tableofcontents
                     
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \relax doesn't match its definition.
\@starttoc ...#1\endcsname \jobname .#1\relax \fi 
                                                  \@nobreakfalse \endgroup 
l.99 \tableofcontents
                     
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

)
! Incomplete \iffalse; all text was ignored after line 99.
<inserted text> 
                \fi 
<*> ExempleUsPlantillaA4.tex 
                             -recorder
The file ended while I was skipping conditional text.
This kind of error happens when you say `\if...' and forget
the matching `\fi'. I've inserted a `\fi'; this might work.

! Emergency stop.
<*> ExempleUsPlantillaA4.tex -recorder
                                      
*** (job aborted, no legal \end found)

 
Here is how much of TeX's memory you used:
 2321 strings out of 493304
 32339 string characters out of 6139872
 97083 words of memory out of 5000000
 5732 multiletter control sequences out of 15000+600000
 20875 words of font info for 44 fonts, out of 8000000 for 9000
 957 hyphenation exceptions out of 8191
 38i,10n,23p,715b,305s stack positions out of 5000i,500n,10000p,200000b,80000s
!  ==> Fatal error occurred, no output PDF file produced!
